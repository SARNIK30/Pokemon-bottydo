import logging
import uuid
import json
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import config
from storage import (
    get_user, save_user, create_promocode, add_custom_pokemon, add_pokemon_to_user,
    get_all_users, get_custom_pokemon
)
from models.pokemon import Pokemon
from pokemon_api import get_pokemon_data_sync

logger = logging.getLogger(__name__)

async def admin_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Handle the /admin command - show admin panel if user is an admin."""
    user_id = update.effective_user.id
    
    # Check if the user is an admin
    if user_id not in config.ADMIN_IDS:
        await update.message.reply_text("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return
    
    # Create the admin panel keyboard
    keyboard = [
        [InlineKeyboardButton("üß† –°–æ–∑–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞", callback_data="admin_create_pokemon")],
        [InlineKeyboardButton("üéÅ –í—ã–¥–∞—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞ –∏–≥—Ä–æ–∫—É", callback_data="admin_give_pokemon")],
        [InlineKeyboardButton("üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="admin_change_balance")],
        [InlineKeyboardButton("üéÅ –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥", callback_data="admin_create_promocode")]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        "üëë *–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup,
        parse_mode="Markdown"
    )

async def admin_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Handle callback queries from the admin panel."""
    query = update.callback_query
    user_id = query.from_user.id
    
    # Check if the user is an admin
    if user_id not in config.ADMIN_IDS:
        await query.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return
    
    await query.answer()
    
    action = query.data
    
    if action == "admin_create_pokemon":
        # Start the process of creating a custom Pokemon
        context.user_data["admin_state"] = "create_pokemon_name"
        await query.edit_message_text(
            "üß† *–°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∫–µ–º–æ–Ω–∞:",
            parse_mode="Markdown"
        )
    
    elif action == "admin_change_balance":
        # Start the process of changing a user's balance
        context.user_data["admin_state"] = "change_balance_user_id"
        await query.edit_message_text(
            "üí∞ *–ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:",
            parse_mode="Markdown"
        )
    
    elif action == "admin_create_promocode":
        # Start the process of creating a promocode
        context.user_data["admin_state"] = "create_promocode_code"
        await query.edit_message_text(
            "üéÅ *–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø—Ä–æ–º–æ–∫–æ–¥–∞:",
            parse_mode="Markdown"
        )
    
    elif action == "admin_give_pokemon":
        # Start the process of giving a Pokemon to a user
        context.user_data["admin_state"] = "give_pokemon_username"
        await query.edit_message_text(
            "üéÅ *–í—ã–¥–∞—á–∞ –ø–æ–∫–µ–º–æ–Ω–∞ –∏–≥—Ä–æ–∫—É*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ @username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram (–Ω–∞—á–∏–Ω–∞—è —Å —Å–∏–º–≤–æ–ª–∞ @):",
            parse_mode="Markdown"
        )
        
    elif action == "admin_back":
        # Go back to the main admin panel
        keyboard = [
            [InlineKeyboardButton("üß† –°–æ–∑–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞", callback_data="admin_create_pokemon")],
            [InlineKeyboardButton("üéÅ –í—ã–¥–∞—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞ –∏–≥—Ä–æ–∫—É", callback_data="admin_give_pokemon")],
            [InlineKeyboardButton("üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="admin_change_balance")],
            [InlineKeyboardButton("üéÅ –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥", callback_data="admin_create_promocode")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            "üëë *–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –Ω–∞–≥—Ä–∞–¥—ã –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
    elif action.startswith("admin_promocode_type_"):
        reward_type = action.replace("admin_promocode_type_", "")
        
        if reward_type == "coins":
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç
            context.user_data["admin_state"] = "create_promocode_reward_coins"
            
            await query.edit_message_text(
                "üí∞ *–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ - –ú–æ–Ω–µ—Ç—ã*\n\n"
                "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –¥–ª—è –Ω–∞–≥—Ä–∞–¥—ã:",
                parse_mode="Markdown"
            )
            
        elif reward_type == "pokemon":
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∫–µ–º–æ–Ω–∞
            context.user_data["admin_state"] = "create_promocode_reward_pokemon"
            
            await query.edit_message_text(
                "üê≤ *–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ - –ü–æ–∫–µ–º–æ–Ω*\n\n"
                "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∫–µ–º–æ–Ω–∞ –¥–ª—è –Ω–∞–≥—Ä–∞–¥—ã:",
                parse_mode="Markdown"
            )
            
        elif reward_type == "trainer":
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID —Ç—Ä–µ–Ω–µ—Ä–∞
            context.user_data["admin_state"] = "create_promocode_reward_trainer"
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤
            trainer_list = "\n".join([f"- {trainer_id}: {trainer['name']}" for trainer_id, trainer in config.TRAINERS.items()])
            
            await query.edit_message_text(
                "üë®‚Äçüè´ *–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ - –¢—Ä–µ–Ω–µ—Ä*\n\n"
                f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—Ä–µ–Ω–µ—Ä—ã:\n{trainer_list}\n\n"
                "–í–≤–µ–¥–∏—Ç–µ ID —Ç—Ä–µ–Ω–µ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞:",
                parse_mode="Markdown"
            )
            
        elif reward_type == "custom_pokemon":
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞
            context.user_data["admin_state"] = "create_promocode_reward_custom_pokemon"
            
            await query.edit_message_text(
                "üß† *–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø–æ–∫–µ–º–æ–Ω*\n\n"
                "–í–≤–µ–¥–∏—Ç–µ ID —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞ –¥–ª—è –Ω–∞–≥—Ä–∞–¥—ã:",
                parse_mode="Markdown"
            )
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–∫–µ–º–æ–Ω–æ–≤ –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
    elif action.startswith("admin_promocode_pokemon_amount_"):
        amount = int(action.replace("admin_promocode_pokemon_amount_", ""))
        pokemon_name = context.user_data["promocode_pokemon_name"]
        code = context.user_data["promocode_code"]
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–æ–∫–µ–º–æ–Ω–æ–≤
        promocode = create_promocode(
            code=code, 
            reward_type="pokemon", 
            reward_value=pokemon_name, 
            reward_amount=amount,
            created_by=user_id,
            description=f"–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∫–µ–º–æ–Ω–∞ {pokemon_name.capitalize()} (x{amount})"
        )
        
        await query.edit_message_text(
            f"‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ *{code}* —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n"
            f"–¢–∏–ø –Ω–∞–≥—Ä–∞–¥—ã: –ü–æ–∫–µ–º–æ–Ω\n"
            f"–ü–æ–∫–µ–º–æ–Ω: {pokemon_name.capitalize()}\n"
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {amount}\n"
            f"–°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: {user_id}",
            parse_mode="Markdown"
        )
        
        # Clear the admin state
        del context.user_data["admin_state"]
        del context.user_data["promocode_code"]
        del context.user_data["promocode_pokemon_name"]

async def handle_admin_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> bool:
    """Handle messages in admin mode and return whether the message was handled."""
    user_id = update.effective_user.id
    
    # Check if the user is in admin mode
    if user_id not in config.ADMIN_IDS or "admin_state" not in context.user_data:
        return False
    
    admin_state = context.user_data["admin_state"]
    message_text = update.message.text
    
    if admin_state == "create_pokemon_name":
        # Save the Pokemon name
        context.user_data["custom_pokemon_name"] = message_text
        context.user_data["admin_state"] = "create_pokemon_type"
        
        await update.message.reply_text(
            f"–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∫–µ–º–æ–Ω–∞: *{message_text}*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø(—ã) –ø–æ–∫–µ–º–æ–Ω–∞ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –Ω–∞–ø—Ä–∏–º–µ—Ä, '–æ–≥–æ–Ω—å, –ª–µ—Ç–∞—é—â–∏–π'):",
            parse_mode="Markdown"
        )
        return True
        
    elif admin_state == "create_pokemon_type":
        # Save the Pokemon type
        context.user_data["custom_pokemon_type"] = message_text
        context.user_data["admin_state"] = "create_pokemon_image"
        
        await update.message.reply_text(
            f"–¢–∏–ø –ø–æ–∫–µ–º–æ–Ω–∞: *{message_text}*\n\n"
            "–í–≤–µ–¥–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–∫–µ–º–æ–Ω–∞ (–∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º):",
            parse_mode="Markdown"
        )
        return True
        
    elif admin_state == "create_pokemon_image":
        # Save the Pokemon image URL
        context.user_data["custom_pokemon_image_url"] = message_text if message_text != "" else None
        context.user_data["admin_state"] = "create_pokemon_stats"
        
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–æ–∫–µ–º–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∞—Ç–∞–∫–∞,–∑–∞—â–∏—Ç–∞,–æ–∑–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 100,80,150):",
            parse_mode="Markdown"
        )
        return True
            
    elif admin_state == "create_pokemon_stats":
        # Parse the stats
        try:
            stats = message_text.split(",")
            attack = int(stats[0].strip())
            defense = int(stats[1].strip())
            hp = int(stats[2].strip())
            
            # Create the custom Pokemon
            name = context.user_data["custom_pokemon_name"]
            types = [t.strip() for t in context.user_data["custom_pokemon_type"].split(",")]
            image_url = context.user_data["custom_pokemon_image_url"]
            
            pokemon_data = {
                "id": str(uuid.uuid4()),
                "name": name,
                "types": types,
                "image_url": image_url,
                "stats": {
                    "attack": attack,
                    "defense": defense,
                    "hp": hp
                },
                "custom": True
            }
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞
            pokemon_id = add_custom_pokemon(pokemon_data)
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–∫–µ–º–æ–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            custom_pokemon = Pokemon.create_custom_pokemon(
                name=name,
                types=types,
                attack=attack,
                defense=defense,
                hp=hp,
                image_url=image_url
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∫–µ–º–æ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É (3 —à—Ç—É–∫–∏)
            admin_msg = ""
            admin_user = get_user(user_id)
            
            # –î–æ–±–∞–≤–ª—è–µ–º 3 –∫–æ–ø–∏–∏ –ø–æ–∫–µ–º–æ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
            for i in range(3):
                # –û–±—Ö–æ–¥–∏–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ø–æ–∫–µ–º–æ–Ω–æ–≤
                admin_user.pokemons.append(custom_pokemon)
                admin_user.caught_pokemon_count += 1
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            save_user(admin_user)
            admin_msg = "\n\n‚úÖ –ü–æ–∫–µ–º–æ–Ω —Ç–∞–∫–∂–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à—É –∫–æ–ª–ª–µ–∫—Ü–∏—é (3 —à—Ç.)!"
            
            await update.message.reply_text(
                f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø–æ–∫–µ–º–æ–Ω *{name}* —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n"
                f"ID: `{pokemon_id}`\n"
                f"–¢–∏–ø: {', '.join(types)}\n"
                f"–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: –ê—Ç–∞–∫–∞ {attack}, –ó–∞—â–∏—Ç–∞ {defense}, –û–ó {hp}{admin_msg}",
                parse_mode="Markdown"
            )
            
            # Clear the admin state
            del context.user_data["admin_state"]
            del context.user_data["custom_pokemon_name"]
            del context.user_data["custom_pokemon_type"]
            del context.user_data["custom_pokemon_image_url"]
            
        except (ValueError, IndexError) as e:
            await update.message.reply_text(
                f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: {str(e)}\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∞—Ç–∞–∫–∞,–∑–∞—â–∏—Ç–∞,–æ–∑–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 100,80,150):",
                parse_mode="Markdown"
            )
        return True
    
    elif admin_state == "change_balance_user_id":
        # Parse the user ID
        try:
            target_user_id = int(message_text)
            target_user = get_user(target_user_id)
            
            if target_user is None:
                await update.message.reply_text(
                    "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.\n\n"
                    "–í–≤–µ–¥–∏—Ç–µ ID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:",
                    parse_mode="Markdown"
                )
                return True
            
            context.user_data["target_user_id"] = target_user_id
            context.user_data["admin_state"] = "change_balance_amount"
            
            await update.message.reply_text(
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: ID {target_user_id}\n"
                f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {target_user.balance} –º–æ–Ω–µ—Ç\n\n"
                "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ + –∏–ª–∏ - –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è):",
                parse_mode="Markdown"
            )
        except ValueError:
            await update.message.reply_text(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π ID:",
                parse_mode="Markdown"
            )
        return True
    
    elif admin_state == "change_balance_amount":
        # Parse the balance change
        try:
            target_user_id = context.user_data["target_user_id"]
            target_user = get_user(target_user_id)
            
            if message_text.startswith("+") or message_text.startswith("-"):
                # Relative change
                change = int(message_text)
                new_balance = target_user.balance + change
                
                if new_balance < 0:
                    new_balance = 0
                
                action = "—É–≤–µ–ª–∏—á–µ–Ω" if change > 0 else "—É–º–µ–Ω—å—à–µ–Ω"
                change_abs = abs(change)
            else:
                # Absolute change
                new_balance = int(message_text)
                
                if new_balance < 0:
                    new_balance = 0
                
                change = new_balance - target_user.balance
                action = "–∏–∑–º–µ–Ω–µ–Ω"
                change_abs = abs(change)
            
            # Update the user's balance
            target_user.balance = new_balance
            save_user(target_user)
            
            if change != 0:
                await update.message.reply_text(
                    f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID {target_user_id}) {action} –Ω–∞ {change_abs} –º–æ–Ω–µ—Ç.\n"
                    f"–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance} –º–æ–Ω–µ—Ç.",
                    parse_mode="Markdown"
                )
            else:
                await update.message.reply_text(
                    f"‚ÑπÔ∏è –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID {target_user_id}) –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è.\n"
                    f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {new_balance} –º–æ–Ω–µ—Ç.",
                    parse_mode="Markdown"
                )
            
            # Clear the admin state
            del context.user_data["admin_state"]
            del context.user_data["target_user_id"]
            
        except ValueError:
            await update.message.reply_text(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –±–∞–ª–∞–Ω—Å–∞. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–ª–∏ —á–∏—Å–ª–æ —Å + –∏–ª–∏ -:",
                parse_mode="Markdown"
            )
        return True
    
    elif admin_state == "create_promocode_code":
        # Save the promocode
        context.user_data["promocode_code"] = message_text
        context.user_data["admin_state"] = "create_promocode_type"
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º —Ç–∏–ø–∞ –Ω–∞–≥—Ä–∞–¥—ã
        keyboard = [
            [InlineKeyboardButton("üí∞ –ú–æ–Ω–µ—Ç—ã", callback_data="admin_promocode_type_coins")],
            [InlineKeyboardButton("üê≤ –û–±—ã—á–Ω—ã–π –ø–æ–∫–µ–º–æ–Ω", callback_data="admin_promocode_type_pokemon")],
            [InlineKeyboardButton("üë®‚Äçüè´ –¢—Ä–µ–Ω–µ—Ä", callback_data="admin_promocode_type_trainer")],
            [InlineKeyboardButton("üß† –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø–æ–∫–µ–º–æ–Ω", callback_data="admin_promocode_type_custom_pokemon")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            f"–ö–æ–¥ –ø—Ä–æ–º–æ–∫–æ–¥–∞: *{message_text}*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–∞–≥—Ä–∞–¥—ã:",
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )
        return True
        
    elif admin_state == "create_promocode_reward_coins":
        # Parse the reward
        try:
            reward_value = int(message_text)
            
            if reward_value <= 0:
                await update.message.reply_text(
                    "‚ùå –ù–∞–≥—Ä–∞–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.\n\n"
                    "–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ:",
                    parse_mode="Markdown"
                )
                return True
            
            code = context.user_data["promocode_code"]
            
            # Create the promocode
            promocode = create_promocode(
                code=code, 
                reward_type="coins", 
                reward_value=reward_value, 
                created_by=user_id,
                description=f"–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ {reward_value} –º–æ–Ω–µ—Ç"
            )
            
            await update.message.reply_text(
                f"‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ *{code}* —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n"
                f"–¢–∏–ø –Ω–∞–≥—Ä–∞–¥—ã: –ú–æ–Ω–µ—Ç—ã\n"
                f"–í–µ–ª–∏—á–∏–Ω–∞: {reward_value} –º–æ–Ω–µ—Ç\n"
                f"–°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: {user_id}",
                parse_mode="Markdown"
            )
            
            # Clear the admin state
            del context.user_data["admin_state"]
            del context.user_data["promocode_code"]
            
        except ValueError:
            await update.message.reply_text(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–∞–≥—Ä–∞–¥—ã. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:",
                parse_mode="Markdown"
            )
        return True
    
    elif admin_state == "create_promocode_reward_pokemon":
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∫–µ–º–æ–Ω–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
        pokemon_name = message_text.strip().lower()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–∫–µ–º–æ–Ω–∞
        pokemon_data = get_pokemon_data_sync(pokemon_name)
        if not pokemon_data:
            await update.message.reply_text(
                f"‚ùå –ü–æ–∫–µ–º–æ–Ω '{pokemon_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.\n\n"
                "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –ø–æ–∫–µ–º–æ–Ω–∞:",
                parse_mode="Markdown"
            )
            return True
            
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
        keyboard = [
            [
                InlineKeyboardButton("1", callback_data="admin_promocode_pokemon_amount_1"),
                InlineKeyboardButton("2", callback_data="admin_promocode_pokemon_amount_2"),
                InlineKeyboardButton("3", callback_data="admin_promocode_pokemon_amount_3")
            ],
            [
                InlineKeyboardButton("5", callback_data="admin_promocode_pokemon_amount_5"),
                InlineKeyboardButton("10", callback_data="admin_promocode_pokemon_amount_10")
            ]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–∫–µ–º–æ–Ω–∞
        context.user_data["promocode_pokemon_name"] = pokemon_name
        
        await update.message.reply_text(
            f"–í—ã–±—Ä–∞–Ω –ø–æ–∫–µ–º–æ–Ω: *{pokemon_name.capitalize()}*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫–µ–º–æ–Ω–æ–≤ –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞:",
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )
        return True
        
    elif admin_state == "create_promocode_reward_trainer":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç—Ä–µ–Ω–µ—Ä–∞
        trainer_id = message_text.strip().lower()
        
        if trainer_id not in config.TRAINERS:
            # –ü–æ–∫–∞–∂–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç—Ä–µ–Ω–µ—Ä–æ–≤
            trainer_list = "\n".join([f"- {trainer_id}" for trainer_id in config.TRAINERS.keys()])
            
            await update.message.reply_text(
                f"‚ùå –¢—Ä–µ–Ω–µ—Ä '{trainer_id}' –Ω–µ –Ω–∞–π–¥–µ–Ω.\n\n"
                f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—Ä–µ–Ω–µ—Ä—ã:\n{trainer_list}\n\n"
                "–í–≤–µ–¥–∏—Ç–µ ID —Ç—Ä–µ–Ω–µ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞:",
                parse_mode="Markdown"
            )
            return True
            
        code = context.user_data["promocode_code"]
        trainer_name = config.TRAINERS[trainer_id]["name"]
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞
        promocode = create_promocode(
            code=code, 
            reward_type="trainer", 
            reward_value=trainer_id, 
            created_by=user_id,
            description=f"–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–µ–Ω–µ—Ä–∞ {trainer_name}"
        )
        
        await update.message.reply_text(
            f"‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ *{code}* —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n"
            f"–¢–∏–ø –Ω–∞–≥—Ä–∞–¥—ã: –¢—Ä–µ–Ω–µ—Ä\n"
            f"–¢—Ä–µ–Ω–µ—Ä: {trainer_name}\n"
            f"–°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: {user_id}",
            parse_mode="Markdown"
        )
        
        # Clear the admin state
        del context.user_data["admin_state"]
        del context.user_data["promocode_code"]
        return True
        
    elif admin_state == "create_promocode_reward_custom_pokemon":
        # –ü–æ–ª—É—á–∞–µ–º ID —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞
        custom_pokemon_id = message_text.strip()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞
        pokemon_data = get_custom_pokemon(custom_pokemon_id)
        if not pokemon_data:
            await update.message.reply_text(
                f"‚ùå –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø–æ–∫–µ–º–æ–Ω —Å ID '{custom_pokemon_id}' –Ω–µ –Ω–∞–π–¥–µ–Ω.\n\n"
                "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞:",
                parse_mode="Markdown"
            )
            return True
            
        code = context.user_data["promocode_code"]
        pokemon_name = pokemon_data["name"]
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞
        promocode = create_promocode(
            code=code, 
            reward_type="custom_pokemon", 
            reward_value=custom_pokemon_id, 
            created_by=user_id,
            description=f"–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞ {pokemon_name}"
        )
        
        await update.message.reply_text(
            f"‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ *{code}* —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n"
            f"–¢–∏–ø –Ω–∞–≥—Ä–∞–¥—ã: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø–æ–∫–µ–º–æ–Ω\n"
            f"–ü–æ–∫–µ–º–æ–Ω: {pokemon_name} (ID: {custom_pokemon_id})\n"
            f"–°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: {user_id}",
            parse_mode="Markdown"
        )
        
        # Clear the admin state
        del context.user_data["admin_state"]
        del context.user_data["promocode_code"]
        return True
        
    elif admin_state == "give_pokemon_username":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç username
        if not message_text.startswith('@'):
            await update.message.reply_text(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç username. –í–≤–µ–¥–∏—Ç–µ @username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram:",
                parse_mode="Markdown"
            )
            return True
            
        username = message_text[1:]  # –£–¥–∞–ª—è–µ–º —Å–∏–º–≤–æ–ª @
        context.user_data["target_username"] = username
        
        # –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username
        found_user = None
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            all_users = get_all_users()
            
            for user_id, user_data in all_users.items():
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è username –≤ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if hasattr(user_data, 'username') and user_data.username and user_data.username.lower() == username.lower():
                    found_user = user_data
                    context.user_data["target_user_id"] = int(user_id)
                    break
                    
            if found_user is None:
                await update.message.reply_text(
                    f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å username @{username} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞.\n\n"
                    "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —Ö–æ—Ç—è –±—ã —Ä–∞–∑ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º –∫–æ–º–∞–Ω–¥–æ–π /start",
                    parse_mode="Markdown"
                )
                return True
                
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –ø–æ–∫–µ–º–æ–Ω–∞ –¥–ª—è –≤—ã–¥–∞—á–∏
            context.user_data["admin_state"] = "give_pokemon_name"
            
            await update.message.reply_text(
                f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –Ω–∞–π–¥–µ–Ω!\n\n"
                "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∫–µ–º–æ–Ω–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n"
                "(–º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–º–µ–Ω —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –¥–ª—è –≤—ã–¥–∞—á–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–∫–µ–º–æ–Ω–æ–≤):",
                parse_mode="Markdown"
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            await update.message.reply_text(
                f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)}\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.",
                parse_mode="Markdown"
            )
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            del context.user_data["admin_state"]
            if "target_username" in context.user_data:
                del context.user_data["target_username"]
                
        return True
        
    elif admin_state == "give_pokemon_name":
        pokemon_names = [name.strip() for name in message_text.split(',')]
        target_username = context.user_data["target_username"]
        target_user_id = context.user_data["target_user_id"]
        target_user = get_user(target_user_id)
        
        if target_user is None:
            await update.message.reply_text(
                f"‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {target_user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                parse_mode="Markdown"
            )
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            del context.user_data["admin_state"]
            del context.user_data["target_username"]
            del context.user_data["target_user_id"]
            return True
        
        successful = []
        failed = []
        
        for pokemon_name in pokemon_names:
            try:
                # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–∫–µ–º–æ–Ω–∞
                try:
                    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ API –Ω–∞–ø—Ä—è–º—É—é (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
                    from pokemon_api import get_pokemon_data
                    pokemon_data = await get_pokemon_data(pokemon_name.lower())
                    
                    if pokemon_data:
                        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º –ø–æ–∫–µ–º–æ–Ω–∞
                        pokemon = Pokemon.create_from_data(pokemon_data)
                    else:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –±—ã—Ç—å —ç—Ç–æ –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø–æ–∫–µ–º–æ–Ω
                        custom_pokemons = get_custom_pokemon(pokemon_name)
                        if custom_pokemons:
                            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞
                            pokemon_data = next(iter(custom_pokemons.values()))
                            pokemon = Pokemon.from_dict(pokemon_data)
                        else:
                            pokemon = None
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–∫–µ–º–æ–Ω–∞ {pokemon_name}: {e}")
                    custom_pokemons = get_custom_pokemon(pokemon_name)
                    if custom_pokemons:
                        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞
                        pokemon_data = next(iter(custom_pokemons.values()))
                        pokemon = Pokemon.from_dict(pokemon_data)
                    else:
                        pokemon = None
                
                if pokemon is None:
                    failed.append(f"{pokemon_name} (–Ω–µ –Ω–∞–π–¥–µ–Ω)")
                    continue
                
                # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∫–µ–º–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                if add_pokemon_to_user(target_user_id, pokemon):
                    successful.append(pokemon_name)
                else:
                    failed.append(f"{pokemon_name} (–æ—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è)")
                    
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –ø–æ–∫–µ–º–æ–Ω–∞ {pokemon_name}: {e}")
                failed.append(f"{pokemon_name} (–æ—à–∏–±–∫–∞: {str(e)})")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
        result_message = f"üìä *–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–¥–∞—á–∏ –ø–æ–∫–µ–º–æ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{target_username}:*\n\n"
        
        if successful:
            result_message += "‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–æ:\n"
            for name in successful:
                result_message += f"- {name}\n"
        
        if failed:
            if successful:
                result_message += "\n"
            result_message += "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å:\n"
            for name in failed:
                result_message += f"- {name}\n"
        
        await update.message.reply_text(
            result_message,
            parse_mode="Markdown"
        )
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        del context.user_data["admin_state"]
        del context.user_data["target_username"]
        del context.user_data["target_user_id"]
        
        return True
    
    return False
