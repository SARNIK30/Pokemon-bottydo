import logging
from telegram import Update
from telegram.ext import ContextTypes
from storage import get_user
from pokemon_api import get_pokemon_image_url
import config

logger = logging.getLogger(__name__)

async def info_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Handle the /info command - show user info."""
    # Check if the command is a reply to another user's message
    if update.message.reply_to_message:
        # Get info for the replied user
        target_user_id = update.message.reply_to_message.from_user.id
        target_user_name = update.message.reply_to_message.from_user.first_name
        
        # Show the info for the target user
        await show_user_info(update, context, target_user_id, target_user_name)
    else:
        # Show info for the current user
        user_id = update.effective_user.id
        user_name = update.effective_user.first_name
        
        await show_user_info(update, context, user_id, user_name)

async def show_user_info(update: Update, context: ContextTypes.DEFAULT_TYPE, user_id: int, user_name: str) -> None:
    """Show info for a specific user."""
    user = get_user(user_id)
    
    # Prepare the info message
    info_message = f"‚ÑπÔ∏è *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–Ω–µ—Ä–µ {user_name}*\n\n"
    
    # League info
    league_data = config.LEAGUES.get(user.league, config.LEAGUES[1])
    info_message += f"üèÜ *–õ–∏–≥–∞:* {user.league}\n"
    info_message += f"- –ë–æ–Ω—É—Å –∞—Ç–∞–∫–∏: +{league_data['attack_bonus']}\n"
    info_message += f"- –ë–æ–Ω—É—Å –∑–∞—â–∏—Ç—ã: +{league_data['defense_bonus']}\n"
    info_message += f"- –ë–æ–Ω—É—Å –∑–¥–æ—Ä–æ–≤—å—è: +{league_data['health_bonus']}\n\n"
    
    # Pokemon count
    info_message += f"üî¢ *–ü–æ–∫–µ–º–æ–Ω–æ–≤ –ø–æ–π–º–∞–Ω–æ:* {user.caught_pokemon_count}\n"
    info_message += f"üî¢ *–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≤–∏–¥–æ–≤ –ü–æ–∫–µ–º–æ–Ω–æ–≤:* {len(set(p.name for p in user.pokemons))}\n\n"
    
    # Balance
    info_message += f"üí∞ *–ë–∞–ª–∞–Ω—Å:* {user.balance} –º–æ–Ω–µ—Ç\n\n"
    
    # Trainer info
    if user.trainer:
        trainer_data = config.TRAINERS.get(user.trainer.lower(), {})
        trainer_name = trainer_data.get("name", user.trainer)
        trainer_level = user.trainer_level
        power_bonus = trainer_data.get("power_bonus", 0) * 100
        
        info_message += f"üë®‚Äçüè´ *–¢—Ä–µ–Ω–µ—Ä:* {trainer_name} (–£—Ä–æ–≤–µ–Ω—å {trainer_level})\n"
        info_message += f"- –ë–æ–Ω—É—Å —Å–∏–ª—ã: +{power_bonus}%\n\n"
    else:
        info_message += "üë®‚Äçüè´ *–¢—Ä–µ–Ω–µ—Ä:* –ù–µ—Ç\n\n"
    
    # Main Pokemon info
    if user.main_pokemon:
        pokemon = user.main_pokemon
        cp = pokemon.calculate_cp()
        
        info_message += f"‚≠ê *–û—Å–Ω–æ–≤–Ω–æ–π –ü–æ–∫–µ–º–æ–Ω:* {pokemon.name}\n"
        info_message += f"- CP: {cp}\n"
        info_message += f"- –¢–∏–ø: {', '.join(pokemon.types)}\n"
        info_message += f"- –ê—Ç–∞–∫–∞: {pokemon.attack}\n"
        info_message += f"- –ó–∞—â–∏—Ç–∞: {pokemon.defense}\n"
        info_message += f"- HP: {pokemon.hp}\n"
    else:
        info_message += "‚≠ê *–û—Å–Ω–æ–≤–Ω–æ–π –ü–æ–∫–µ–º–æ–Ω:* –ù–µ—Ç\n"
    
    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ–∫–µ–º–æ–Ω, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    if user.main_pokemon:
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–∫–µ–º–æ–Ω–∞
        image_url = None
        try:
            # –ï—Å–ª–∏ —É –ø–æ–∫–µ–º–æ–Ω–∞ –µ—Å—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
            if hasattr(user.main_pokemon, 'image_url') and user.main_pokemon.image_url:
                image_url = user.main_pokemon.image_url
            else:
                # –ò–Ω–∞—á–µ –ø–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ API
                image_url = await get_pokemon_image_url(user.main_pokemon.name)
            
            # –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            if image_url:
                await context.bot.send_photo(
                    chat_id=update.effective_chat.id,
                    photo=image_url,
                    caption=info_message,
                    parse_mode="Markdown"
                )
                return
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–∫–µ–º–æ–Ω–∞: {e}")
    
    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è,
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await update.message.reply_text(
        info_message,
        parse_mode="Markdown"
    )
