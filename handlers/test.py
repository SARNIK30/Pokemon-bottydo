#!/usr/bin/env python3
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
"""

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import logging
import time
from storage import get_user
import config

logger = logging.getLogger(__name__)

async def test_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Handle the /test command - test bot functionality."""
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user = get_user(user_id)
    has_pokemon = len(user.pokemons) > 0
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = (
        "ü§ñ *–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞*\n\n"
        f"–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!\n\n"
        f"‚Ä¢ Telegram ID: `{user_id}`\n"
        f"‚Ä¢ –ò–º—è: {update.effective_user.first_name}\n"
        f"‚Ä¢ –ò–º–µ—é—Ç—Å—è –ø–æ–∫–µ–º–æ–Ω—ã: {'‚úÖ' if has_pokemon else '‚ùå'}\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ /start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
        "‚Ä¢ /info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–Ω–µ—Ä–µ\n"
        "‚Ä¢ /pokedex - –í–∞—à–∞ –∫–æ–ª–ª–µ–∫—Ü–∏—è –ø–æ–∫–µ–º–æ–Ω–æ–≤\n"
        "‚Ä¢ /battle - –°—Ä–∞–∂–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º —Ç—Ä–µ–Ω–µ—Ä–æ–º\n"
        "‚Ä¢ /shop - –ú–∞–≥–∞–∑–∏–Ω –ø—Ä–µ–¥–º–µ—Ç–æ–≤\n"
        "‚Ä¢ /evolution - –≠–≤–æ–ª—é—Ü–∏—è –ø–æ–∫–µ–º–æ–Ω–æ–≤\n"
        "‚Ä¢ /trade - –û–±–º–µ–Ω –ø–æ–∫–µ–º–æ–Ω–∞–º–∏\n"
        "‚Ä¢ /promocode - –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞\n"
        "‚Ä¢ /admin - –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
    keyboard = [
        [
            InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="test_refresh"),
            InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="test_stats")
        ],
        [
            InlineKeyboardButton("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è", callback_data="test_connection")
        ]
    ]
    
    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–æ–∫–µ–º–æ–Ω–æ–≤, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ
    if not has_pokemon:
        keyboard.append([
            InlineKeyboardButton("üéÆ –í—ã–±—Ä–∞—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞", callback_data="test_starter")
        ])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        message,
        reply_markup=reply_markup,
        parse_mode="Markdown"
    )

async def test_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Handle test-related callback queries."""
    query = update.callback_query
    await query.answer()
    
    user_id = update.effective_user.id
    user = get_user(user_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback_data
    data = query.data.split("_")[1]
    
    if data == "refresh":
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await query.edit_message_text(
            "üîÑ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!\n\n"
            "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.",
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="test_back")]
            ])
        )
    
    elif data == "stats":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        bot_uptime = "–ê–∫—Ç–∏–≤–µ–Ω"
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_stats = (
            f"‚Ä¢ –ë–∞–ª–∞–Ω—Å: {user.balance} –º–æ–Ω–µ—Ç\n"
            f"‚Ä¢ –ü–æ–∫–µ–º–æ–Ω–æ–≤: {len(user.pokemons)}\n"
            f"‚Ä¢ –õ–∏–≥–∞: {user.league}\n"
        )
        
        await query.edit_message_text(
            "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n"
            "üì± *–°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞:*\n"
            f"‚Ä¢ –°–æ—Å—Ç–æ—è–Ω–∏–µ: –ê–∫—Ç–∏–≤–µ–Ω\n"
            f"‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {bot_uptime}\n"
            f"‚Ä¢ –†–µ–∂–∏–º: –ü–æ–ª–ª–∏–Ω–≥\n"
            f"‚Ä¢ –í–µ—Ä—Å–∏—è API: Telegram Bot API 6.3\n"
            f"‚Ä¢ –í–µ—Ä—Å–∏—è –±–æ—Ç–∞: 1.0.0\n\n"
            "üë§ *–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n"
            f"{user_stats}",
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="test_back")]
            ])
        )
    
    elif data == "connection":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Telegram API
        await query.edit_message_text(
            "üîç *–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è*\n\n"
            "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Telegram API: ‚úÖ –£—Å–ø–µ—à–Ω–æ\n"
            "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å PokeAPI: ‚úÖ –£—Å–ø–µ—à–Ω–æ\n\n"
            "–í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!",
            parse_mode="Markdown",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("¬´ –ù–∞–∑–∞–¥", callback_data="test_back")]
            ])
        )
    
    elif data == "starter":
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞
        keyboard = []
        for starter_id, starter_data in config.STARTER_POKEMON.items():
            keyboard.append([
                InlineKeyboardButton(
                    f"{starter_data['name']} ({starter_data['type']})",
                    callback_data=f"starter_{starter_id}"
                )
            ])
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            "üéÆ *–í—ã–±–æ—Ä —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞:\n"
            "‚Ä¢ –ß–∞—Ä–º–∞–Ω–¥–µ—Ä - –æ–≥–Ω–µ–Ω–Ω—ã–π —Ç–∏–ø\n"
            "‚Ä¢ –ë—É–ª—å–±–∞–∑–∞–≤—Ä - —Ç—Ä–∞–≤—è–Ω–æ–π —Ç–∏–ø\n"
            "‚Ä¢ –°–∫–≤–∏—Ä—Ç–ª - –≤–æ–¥–Ω—ã–π —Ç–∏–ø\n\n"
            "–í—ã–±–∏—Ä–∞–π—Ç–µ —Å —É–º–æ–º, —ç—Ç–æ –≤–∞–∂–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ!",
            parse_mode="Markdown",
            reply_markup=reply_markup
        )
    
    elif data == "back":
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
        await test_command(update, context)
